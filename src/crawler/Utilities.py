'''
Created on May 9, 2012

@author: Tyler, Nolan
'''

import re

class Utilities(object):
    
    def __init__(self):
        self.common_words = []
        s = """a
able
about
above
according
account
across
act
action
activities
activity
actually
added
addition
additional
administration
after
again
against
age
ago
ahead
aid
air
all
almost
alone
along
already
also
although
always
am
america
american
among
amount
an
analysis
and
another
answer
anti
any
anyone
anything
apparently
appear
appeared
approach
are
area
areas
arms
army
around
art
as
ask
asked
association
at
attack
attention
audience
available
average
away
b
back
bad
ball
based
basic
basis
be
beautiful
became
because
become
bed
been
before
began
beginning
behind
being
believe
below
best
better
between
beyond
big
bill
black
blood
blue
board
body
book
born
both
boy
boys
bring
british
brought
brown
building
built
business
but
by
c
call
called
came
can
cannot
cant
car
care
carried
cars
case
cases
cause
cent
center
central
century
certain
certainly
chance
change
changes
character
charge
chief
child
children
choice
christian
church
city
class
clear
clearly
close
closed
club
co
cold
college
color
come
comes
coming
committee
common
communist
community
company
complete
completely
concerned
conditions
congress
consider
considered
continued
control
corner
corps
cost
costs
could
couldnt
countries
country
county
couple
course
court
covered
cut
d
daily
dark
data
day
days
de
dead
deal
death
decided
decision
deep
defense
degree
democratic
department
described
design
designed
determined
developed
development
did
didnt
difference
different
difficult
direct
direction
directly
distance
district
do
does
doing
done
dont
door
doubt
down
dr
drive
due
during
e
each
earlier
early
earth
east
easy
economic
education
effect
effective
effects
effort
efforts
eight
either
elements
else
end
england
english
enough
entire
equipment
especially
established
europe
even
evening
ever
every
everything
evidence
example
except
existence
expect
expected
experience
extent
eye
eyes
f
face
fact
faith
fall
family
far
farm
father
fear
federal
feed
feel
feeling
feet
felt
few
field
figure
figures
filled
final
finally
find
fine
fire
firm
first
fiscal
five
floor
followed
following
food
foot
for
force
forces
foreign
form
former
forms
forward
found
four
free
freedom
french
friend
friends
from
front
full
function
further
future
g
game
gave
general
generally
george
get
getting
girl
girls
give
given
gives
glass
go
god
going
gone
good
got
government
great
greater
green
ground
group
groups
growing
growth
gun
h
had
hair
half
hall
hand
hands
happened
hard
has
have
having
he
head
hear
heard
heart
heavy
held
hell
help
her
here
herself
hes
high
higher
him
himself
his
history
hit
hold
home
hope
horse
hospital
hot
hotel
hour
hours
house
how
however
human
hundred
husband
i
idea
ideas
if
ill
im
image
immediately
important
in
include
including
income
increase
increased
indeed
individual
industrial
industry
influence
information
inside
instead
interest
international
into
involved
is
island
issue
it
its
itself
ive
j
job
john
just
justice
keep
kennedy
kept
kind
knew
know
knowledge
known
l
labor
lack
land
language
large
larger
last
late
later
latter
law
lay
lead
leaders
learned
least
leave
led
left
length
less
let
letter
letters
level
life
light
like
likely
line
lines
list
literature
little
live
lived
living
local
long
longer
look
looked
looking
lost
lot
love
low
lower
m
made
main
major
make
makes
making
man
manner
mans
many
march
market
married
mass
material
matter
may
maybe
me
mean
meaning
means
medical
meet
meeting
member
members
men
merely
met
method
methods
middle
might
miles
military
million
mind
minutes
miss
modern
moment
money
month
months
moral
more
morning
most
mother
move
moved
movement
moving
mr
mrs
much
music
must
my
myself
n
name
nation
national
nations
natural
nature
near
nearly
necessary
need
needed
needs
negro
neither
never
new
next
night
no
non
nor
normal
north
not
note
nothing
now
nuclear
number
numbers
obtained
obviously
of
off
office
often
oh
old
on
once
one
ones
only
open
opened
operation
opportunity
or
order
organization
other
others
our
out
outside
over
own
p
paid
paper
part
particular
particularly
parts
party
passed
past
pattern
pay
peace
people
per
performance
perhaps
period
person
personal
persons
physical
picture
piece
place
placed
plan
plane
planning
plans
plant
play
point
points
police
policy
political
pool
poor
population
position
possible
post
power
present
president
press
pressure
price
principle
private
probably
problem
problems
process
production
products
program
programs
progress
property
provide
provided
public
purpose
put
quality
question
questions
quite
r
race
radio
ran
range
rate
rather
reached
reaction
read
reading
ready
real
really
reason
received
recent
recently
record
red
religion
religious
remember
report
reported
required
research
respect
responsibility
rest
result
results
return
returned
right
river
road
room
run
running
s
said
sales
same
sat
saw
say
saying
says
school
schools
science
season
second
secretary
section
see
seem
seemed
seems
seen
self
sense
sent
series
serious
served
service
services
set
seven
several
shall
she
short
shot
should
show
showed
shown
side
similar
simple
simply
since
single
situation
six
size
slowly
small
so
social
society
some
something
sometimes
somewhat
son
soon
sort
sound
south
southern
soviet
space
speak
special
specific
spirit
spring
square
st
staff
stage
stand
standard
start
started
state
statements
states
stay
step
steps
still
stock
stood
stop
stopped
story
straight
street
strength
strong
student
students
study
subject
such
suddenly
summer
sun
support
sure
surface
system
systems
t
table
take
taken
taking
talk
tax
technical
tell
temperature
ten
term
terms
test
th
than
that
thats
the
their
them
themselves
then
theory
there
therefore
theres
these
they
thing
things
think
thinking
third
thirty
this
those
thought
three
through
through
throughout
thus
time
times
to
today
together
told
too
took
top
total
toward
town
trade
training
treatment
trial
tried
trouble
true
truth
try
trying
turn
turned
twenty
two
type
types
u
under
understand
understanding
union
united
university
until
up
upon
us
use
used
using
usually
value
values
various
very
view
voice
volume
waiting
walked
wall
want
wanted
war
was
washington
wasnt
water
way
ways
we
week
weeks
well
went
were
west
western
what
whatever
when
where
whether
which
while
white
who
whole
whom
whose
why
wide
wife
will
william
window
wish
with
within
without
woman
women
word
words
work
worked
working
works
world
would
wouldnt
writing
written
wrong
wrote
year
years
yes
yet
york
you
young
your
youre"""
        self.common_words = s.split("\n")
    
    _instance = None
    def __new__(cls, *args, **kwargs):
        if not cls._instance:
            cls._instance = super(Utilities, cls).__new__(
                                cls, *args, **kwargs)
        return cls._instance
    
    """
    Converts text input into a list of words.
    This function assume all text has already been converted to proper ASCII encoding.
    """
    def word_list(self, text, ignore_case = True):    
        # Changes all text to lowercase.
        if ignore_case:
            text = text.lower()
    
        # Removes ASCII apostrophes from the text.
        text = text.replace("'", "")
        
        # Removes commas from the text. We assume that all text
        # is formatted correctly in that there are no typographic errors.
        text = text.replace(",", "")
        
        # Replaces all non-word character with spaces to represent word boundaries.
        rx = re.compile("[^\w ]")
        text = rx.sub(" ", text)    
        
        # Splits words that are divided by spaces.
        text = text.split()
        
        # If any "empty words" have been manufactured by previous processes, drop them.
        text = [x for x in text if x != ""]
        return text
    
    """
    Takes a string of text and returns list of unique words and their frequencies.
    """
    def word_frequencies(self, text):
        words = self.word_list(text)
        unique_words = set(words)
        return sorted([(words.count(word), word) for word in unique_words])
    
    """
    Takes a list of word frequencies and returns up to numWords of the most
    frequently used words that do no belong to commonWords. Returns
    an empty list if numWords <= 0 or if all of the words in wordCounts
    are found in commonWords.
    """
    def top_k_unique_words(self, word_counts, num_words, common_words):
        result = []
        if num_words > 0:
            count = 0
            while (count < num_words) and word_counts:
                word = word_counts.pop()[1]
                if not (word in common_words):
                    result.append(word)
                    count += 1
        return result


#if __name__ == '__main__':
#    s1=Utilities()
#    s2=Utilities()
#    if(id(s1)==id(s2)):
#        print "Same"
#    else:
#        print "Different"